import requests
import random
import webbrowser
import time
import argparse

def main():
    opt = argparse.ArgumentParser(description="Search and Open Web Page from CVE Number")
    opt.add_argument("CVE", help="Enter CVE Number CVE-20xx-xxxx")

    options = opt.parse_args()
    cve = str(options.CVE)
    print(cve)
    ##Example# cve = 'cve-2019-0708'

    user_agent_list = [
        # Chrome
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36',
        'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36',
        'Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36',
        'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36',
        'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36',
        'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36',
        'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36',
        'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36',
        # Firefox
        'Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)',
        'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)',
        'Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (Windows NT 6.2; WOW64; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0)',
        'Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
        'Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; rv:11.0) like Gecko',
        'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)',
        'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)',
        'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)'
    ]

    url_list = ['https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/',
                'https://www.rapid7.com/db/vulnerabilities/msft-',
                'https://www.cvedetails.com/cve/',
                'https://nvd.nist.gov/vuln/detail/',
                'https://cve.circl.lu/cve/',
                'https://www.tenable.com/cve/',
                'https://cve.mitre.org/cgi-bin/cvename.cgi?name=',
                'https://access.redhat.com/security/cve/',
                'https://security-tracker.debian.org/tracker/'
    ]

    ## URL Patch Tuesday # https://www.tenable.com/blog/microsofts-november-2019-patch-tuesday-tenable-roundup
    ## URL Patch Tuesday # https://news.sophos.com/en-us/2019/11/12/patch-tuesday-targets-hyper-v-virtual-machines-in-november-2019-updates/
    ## URL Patch Tuesday # https://www.ghacks.net/2019/1/8/microsoft-windows-security-updates-january-2019-overview/

    # Make the Session
    session = requests.Session()

    # If Use in KKB <Uncomment> this
    # Use px-proxy in command lind before run
    # Set the proxies session
    proxy_px = 'http://127.0.0.1:3128'
    proxy_dict = {'http': proxy_px, 'https': proxy_px}
    session.proxies = proxy_dict
    # If Use in KKB </Uncomment> this

    for url in url_list :
        # Pick a random user agent
        user_agent = random.choice(user_agent_list)

        # Set the headers session
        session.headers = {'User-Agent': user_agent}

        webbrowser.open_new_tab(str(url)+cve)  ## Open Web Url link
        time.sleep(1)  # Let the user actually see something!

if __name__ == '__main__':
    main()
