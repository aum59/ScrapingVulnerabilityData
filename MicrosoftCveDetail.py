import time
from selenium import webdriver
from googletrans import Translator

def get_microsoft_cve(cve):
    url = 'https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/' + cve.upper()
    # /home/aum49/Documents/python3/ScrapingVulnerabilityData/chromedriver_win32(ver84)/chromedriver
    # D:/aum/KKP/Python3 WorkShop/ScrapingVulnerabilityData/chromedriver_win32(ver84)/chromedriver.exe
    driverpath = 'D:/aum/KKP/Python3 WorkShop/ScrapingVulnerabilityData/chromedriver_win32(ver84)/chromedriver.exe'
    driver = webdriver.Chrome(executable_path=driverpath)
    driver.get(url)
    time.sleep(3)
    print('Url :'+url)
    # Title
    events = driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/h2').text
    print('Title :'+ events)
    for i in range(1, 5):
        try:
            events = driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/div[1]/div[2]/p[' + str(i) + ']').text
            print('Description ' + str(i) + ' :' + events)
            # use Proxy
            translator = Translator(proxies={'http': 'http://127.0.0.1:3128', 'https': 'http://127.0.0.1:3128'})
            # Not use Proxy
            # translator = Translator()
            print('Description ' + str(i) + ' :' + translator.translate(events, dest='th').text)
        except:
            print("END of Description.")
            break
    # Product Platform Severity
    Affected = []
    for k in range(1, 110):
        try:
            events1 = driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/table[2]/tbody[' + str(k) + ']/tr[1]/td[1]').text
            events2 = driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/table[2]/tbody[' + str(k) + ']/tr[1]/td[2]').text
            events3 = driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/table[2]/tbody[' + str(k) + ']/tr[1]/td[6]').text
            # print('Affect Product ' + str(k) + ' : ' + events1 + ' ' + events2 + ': ' + events3)
            Affected.append(events1 + ': ' + events2 + ': ' + events3)
        except:
            print("END of Affect Product & Platform & Severity.")
            break
    # CVSS Score
    for k in range(0, len(Affected)):
        try:
            driver.find_element_by_xpath('//*[@id="JelloWrapper"]/div[3]/div[2]/div/ui-view/div[2]/ul/li[2]/a').click()
            events1 = driver.find_element_by_xpath('//*[@id="AffectedProductsWithCVSS"]/tbody/tr[' + str(k) + ']/td[3]/div').text
            # print('CVSS Score ' + str(k) + ' :' + events1)
            Affected[k] += ': ' + events1
        except:
            print("END of CVSS Score.")
            break
    time.sleep(2)  # Let the user actually see something!
    driver.close()
    for i in range(0,len(Affected)):
        print(Affected[i])
# CVE-2019-0708  CVE-2020-0970 CVE-2020-1350
get_microsoft_cve('CVE-2020-17023')
